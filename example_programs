//max of 2 numbers

let number = max(5 , 8);
console.log(number);
function max(a , b) {
return ( a > b) ? a : b;
}

//landscape or not
console.log(islandscape(800 , 1000));

function islandscape(width , height){
    return (width > height);
}


//fizzbuzz
//divisible by 3 - fizz
//divisible by 5 - buzz
//divisible by both 3 and 5 - fizzbuzz
//not divisible by 3 or 5 - input
//not a number - not a number

const output = fizzbuzz(false);
console.log(output);
function fizzbuzz(input){

    if(input % 3 === 0 && input % 5 === 0)
    return "fizzbuzz";

    if(typeof input !== 'number')
    return 'not a number';

    if (input % 3 === 0)
    return 'fizz';

    if(input % 5 === 0)
    return 'buzz';

    return input;
}

//speed check 
checkspeed (80);
function checkspeed(speed){
    const speedlimit = 70;
    const kmperpoint = 5;

    if ( speed < speedlimit + kmperpoint)
    console.log("ok");
    else {
        const points = Math.floor((speed - speedlimit) / kmperpoint);
        if (points >= 12)
        console.log("license suspended");
        else 
        console.log("points", points);
    }
}

//odd and even number
shownumber(10);
function shownumber(limit){
    for ( let i = 0; i <= limit ; i++ ){
        if (i % 2 === 0) console.log(i , 'even');
        else console.log(i, 'odd');
    
    }
}

//count truthy
const array = [0 , null , undefined , "" , 2, 3];

console.log(counttruthy(array));

function counttruthy(array){
let count =0 ;
for ( let value of array)
if (value)
count ++;
return count;
}


//string properties
const movie = {
    title : "a",
    releaseyear : 2019,
    rating : 4.3 ,
    director : "b"
};

function showproperties(obj){
    for (let key in obj)
    if (typeof obj[key] === "string")
    console.log(key , obj[key]);
}

//sum of multiples of 3 and 5
console.log(sum(10));

function sum(limit){
    let sum = 0;

    for ( let i =0 ; i<= limit ; i++)
     if ( i % 3 ===0 || i % 5 === 0)
         sum += i;
   return sum;
}

//grade of student

const marks = [ 80 , 80 ,50];

console.log(calculategrade( marks));

function calculategrade(marks){
    let sum = 0;
    for( let mark of marks)
    summ += mark;
    let average = sum/ marks.length;


    if (average < 60 ) return 'F';
    if (average < 70 ) return 'D';
    if (average < 80 ) return 'C';
    if (average < 90 ) return 'B';
    return 'A';

}

//stars

showstars(5);
function showstars(rows){
    for (let row = 1 ; row <+ rows; row++){          //nested loop
        let pattern = "";
        for ( let i = 0 ; i < row ; i++)
        pattern += '*';
        console.log(pattern);
    }
}

//prime number

showprimes(20);
function showprimes(limit){
    for( let number = 2 ; number <= limit ; number++){
        //2 - cuurent (i)

        let isprime = true ;
        for(let factor = 2 ; factor < number ; factor ++){
            if (number % factor === 0 ){
                isprime = false ; 
                break;
            }
            
        }

        if( isprime) console.log(number);
    }

}

//address object 
//street
//city
//zipcode
//showaddress ( address)

let address = {
       street : 'a',
       city : "b ",
       zipcode : "c"
};

function showaddress(address){
    for (let key in address)
    console.log(key , address[key]);
}

showaddress(address)

//using factory function 
let address = createaddress("a", "b" , "c");

function createaddress(street , city , zipcode){
    return {
        street,
        city,
        zipcode
    };
}

//constructor function
let address = new Address("a", "b" , "c");

console.log(address);
function Address(street , city , zipcode){
    this.street = street;
    this.city = city;
    this.zipcode = zipcode;

}

//object equality

let address1 = new Address("a", "b", "c");
let address2 = new Address("a", 'b' ,'c');

console.log(areEqual(address1, address2));
console.log(areSame(address1, address2));
 
//constructor function
function Address(street , city , zipcode){
    this.street = street;
    this.city = city;
    this.zipcode = zipcode;

}

function areEqual(address1, address2){
    return address1.street === address2.street &&
    address1.city === address2.city &&
    address1.zipcode === address2.zipcode;
}


function areSame( address1 , address2){
    return address1 === address2;
}
